(load "./p2.69.scm")

(define (expt-pair pairs)
  (let ((n (length pairs)))
    (define (iter pairs)
      (let ((i (- n (length pairs))))
        (if (null? pairs)
          '()
          (cons (list (car pairs) (expt 2 i))
                (iter (cdr pairs)) ))))
    (iter pairs)))

(define set5 '(A B C D E))
(define set10 '(A B C D E F G H I J))

(display 'set5)
(newline)
(display (generate-huffman-tree (expt-pair set5)))
(newline)
(display 'set10)
(newline)
(display (generate-huffman-tree (expt-pair set10)))
